<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>문서내용 검색파일</title>
    <link rel="stylesheet" href="/css/common.css">
    <link rel="stylesheet" href="/css/file_upload.css">
    <link rel="stylesheet" href="/css/file_rag.css">
</head>
<body>
    <div class="page-wrapper">
        <div class="page-header">
            <div class="title-container">
                <h1>문서내용 검색파일</h1>
                <a href="/file_manager" class="back-link-small">파일관리프로그램 바로가기</a>
            </div>
        </div>
        
        <!-- 기능 선택 네비게이션 -->
        <div class="content-card">
            <h2>기능 선택</h2>
            <div class="button-container">
                <a href="/file_upload" class="upload-link">파일업로드</a>
                <a href="/folder_upload" class="folder-link">폴더 업로드</a>
                <a href="/vectorstore" class="vector-link">벡터스토어 만들기</a>
                <a href="/file_search" class="search-link">문서내용 검색파일</a>
            </div>
        </div>
        
        <div class="content-card">
            <h2>AI로 문서내용 파일 찾기</h2>
            <div style="margin-bottom: 20px;">
                <textarea id="aiSearchInput" placeholder="어떤 내용의 문서를 찾고 있나요? 예: '프로젝트 관리 방법에 대한 문서', '보안 정책 관련 문서' 등..." style="width: 100%; min-height: 100px; padding: 12px; border: 2px solid var(--border-color); border-radius: 8px; font-size: 14px; font-family: inherit; resize: vertical; box-sizing: border-box;"></textarea>
            </div>
            <button id="aiSearchBtn" class="upload-btn" style="padding: 12px 30px; font-size: 14px; font-weight: 600; cursor: pointer;">
                🔍 AI 검색 실행
            </button>
            <div id="aiSearchResults" style="margin-top: 20px;"></div>
        </div>

        <div class="content-card">
            <h2>AI 검색 기록</h2>
            <div id="searchHistory" class="file-list" style="min-height: 200px;">
                <p style="text-align: center; color: var(--text-muted);">불러오는 중...</p>
            </div>
        </div>

        <div class="content-card">
            <h2>파일명으로 검색</h2>
            <div style="margin-bottom: 20px; display: flex; gap: 10px;">
                <input type="text" id="searchInput" placeholder="파일명을 입력하세요..." style="flex: 1; padding: 10px; border: 2px solid var(--border-color); border-radius: 8px; font-size: 14px;">
                <button id="searchBtn" class="upload-btn" style="padding: 10px 20px; margin: 0;">검색</button>
            </div>
            <div id="searchResults" class="file-list"></div>
        </div>
    </div>

    <script>
        const searchInput = document.getElementById('searchInput');
        const searchBtn = document.getElementById('searchBtn');
        const searchResults = document.getElementById('searchResults');
        const aiSearchInput = document.getElementById('aiSearchInput');
        const aiSearchBtn = document.getElementById('aiSearchBtn');
        const aiSearchResults = document.getElementById('aiSearchResults');
        const searchHistory = document.getElementById('searchHistory');
        let allFiles = [];

        // 페이지 로드 시 모든 파일 가져오기
        async function loadAllFiles() {
            try {
                const response = await fetch('/api/files');
                const data = await response.json();
                
                if (data.success) {
                    allFiles = data.files;
                }
            } catch (error) {
                console.error('Error loading files:', error);
            }
        }

        // 검색 함수
        function performSearch() {
            const searchTerm = searchInput.value.toLowerCase().trim();
            
            if (searchTerm === '') {
                displayFiles(allFiles);
            } else {
                const filteredFiles = allFiles.filter(file => 
                    file.filename.toLowerCase().includes(searchTerm)
                );
                displayFiles(filteredFiles);
            }
        }

        // AI 검색 버튼 클릭 이벤트
        aiSearchBtn.addEventListener('click', async function() {
            const query = aiSearchInput.value.trim();
            
            if (!query) {
                aiSearchResults.innerHTML = '<div class="error" style="padding: 10px; border-radius: 6px; background: linear-gradient(135deg, #f8e0e0 0%, #f5c8c8 100%); color: #842029; border-left: 3px solid #dc3545;">검색어를 입력해주세요.</div>';
                return;
            }
            
            // 로딩 표시
            aiSearchResults.innerHTML = `
                <div style="padding: 20px; text-align: center;">
                    <div class="spinner"></div>
                    <p style="margin-top: 15px; font-size: 14px; color: var(--text-primary);">AI 검색 중입니다... 잠시만 기다려주세요.</p>
                </div>
            `;
            aiSearchBtn.disabled = true;
            
            try {
                const response = await fetch('/api/ai-search', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ query: query })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    let resultHTML = `
                        <div class="success" style="padding: 15px; border-radius: 6px; background: linear-gradient(135deg, #d4f5dc 0%, #b8e6c8 100%); color: #0f5132; border-left: 3px solid #28a745; white-space: pre-wrap; margin-bottom: 15px;">
                            ✅ AI 검색이 완료되었습니다!<br><br>
                            <strong>검색 결과:</strong><br>
                            <pre style="white-space: pre-wrap; word-wrap: break-word; font-family: inherit;">${data.output || data.message}</pre>
                        </div>
                    `;
                    
                    // Bar Chart가 생성되었다면 먼저 표시
                    if (data.barChartPath) {
                        resultHTML += `
                            <div style="margin-top: 20px;">
                                <h3 style="margin-bottom: 10px; font-size: 16px; color: var(--text-primary);">📊 검색 결과 관련성</h3>
                                <iframe src="${data.barChartPath}" style="width: 100%; height: 400px; border: 2px solid var(--border-color); border-radius: 8px; box-shadow: var(--shadow-md);"></iframe>
                            </div>
                        `;
                    }
                    
                    // 3D 시각화가 생성되었다면 표시
                    if (data.htmlFilePath) {
                        resultHTML += `
                            <div style="margin-top: 20px;">
                                <h3 style="margin-bottom: 10px; font-size: 16px; color: var(--text-primary);">🔍 3D 공간 시각화 (가까울수록 유사도 높음)</h3>
                                <iframe src="${data.htmlFilePath}" style="width: 100%; height: 800px; border: 2px solid var(--border-color); border-radius: 8px; box-shadow: var(--shadow-md);"></iframe>
                            </div>
                        `;
                    }
                    
                    aiSearchResults.innerHTML = resultHTML;
                    
                    // 검색 기록 새로고침
                    loadSearchHistory();
                } else {
                    aiSearchResults.innerHTML = `
                        <div class="error" style="padding: 15px; border-radius: 6px; background: linear-gradient(135deg, #f8e0e0 0%, #f5c8c8 100%); color: #842029; border-left: 3px solid #dc3545;">
                            ❌ 검색 중 오류가 발생했습니다: ${data.message}
                        </div>
                    `;
                }
            } catch (error) {
                aiSearchResults.innerHTML = `
                    <div class="error" style="padding: 15px; border-radius: 6px; background: linear-gradient(135deg, #f8e0e0 0%, #f5c8c8 100%); color: #842029; border-left: 3px solid #dc3545;">
                        ❌ 서버 오류: ${error.message}
                    </div>
                `;
            } finally {
                aiSearchBtn.disabled = false;
            }
        });

        // 검색 버튼 클릭 이벤트
        searchBtn.addEventListener('click', performSearch);

        // 엔터 키로 검색
        searchInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                performSearch();
            }
        });

        // 파일 목록 표시
        function displayFiles(files) {
            if (files.length > 0) {
                searchResults.innerHTML = files.map(file => `
                    <div class="file-item">
                        <div class="file-info">
                            <span class="file-name">${file.filename}</span>
                            <span class="file-size">${formatFileSize(file.size)}</span>
                            <span class="file-date">${formatDate(file.uploadDate)}</span>
                        </div>
                    </div>
                `).join('');
            } else {
                searchResults.innerHTML = '<p style="color: var(--text-muted); font-size: 12px;">검색 결과가 없습니다.</p>';
            }
        }

        // 파일 크기 포맷
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return Math.round(bytes / Math.pow(k, i) * 100) / 100 + ' ' + sizes[i];
        }

        // 날짜 포맷
        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString('ko-KR', { 
                year: 'numeric', 
                month: '2-digit', 
                day: '2-digit',
                hour: '2-digit',
                minute: '2-digit'
            });
        }

        // 검색 기록 불러오기
        async function loadSearchHistory() {
            try {
                const response = await fetch('/api/search-history');
                const data = await response.json();
                
                if (data.success && data.history.length > 0) {
                    searchHistory.innerHTML = data.history.map(item => `
                        <div class="file-item" style="margin-bottom: 10px;">
                            <div style="padding: 10px; background: var(--bg-secondary); border-radius: 6px; cursor: pointer;" onclick="viewSearchHistory(${item.id}, '${item.htmlFilePath}', '${item.barChartPath}', '${item.query.replace(/'/g, "\\'")}')">
                                <div style="font-weight: 600; color: var(--primary-color); margin-bottom: 5px;">
                                    🔍 ${item.query}
                                </div>
                                <div style="font-size: 12px; color: var(--text-muted);">
                                    📅 ${item.createdAt}
                                </div>
                            </div>
                        </div>
                    `).join('');
                } else {
                    searchHistory.innerHTML = '<p style="text-align: center; color: var(--text-muted);">검색 기록이 없습니다.</p>';
                }
            } catch (error) {
                console.error('Error loading search history:', error);
                searchHistory.innerHTML = '<p style="text-align: center; color: red;">검색 기록을 불러오는데 실패했습니다.</p>';
            }
        }

        // 검색 기록 상세 보기
        async function viewSearchHistory(id, htmlFilePath, barChartPath, query) {
            // 검색 결과 및 AI 답변 가져오기
            let searchResult = '';
            let aiAnswer = '';
            try {
                const response = await fetch('/api/search-history');
                const data = await response.json();
                if (data.success) {
                    const item = data.history.find(h => h.id === id);
                    if (item) {
                        searchResult = item.searchResult || '';
                        aiAnswer = item.aiAnswer || '';
                    }
                }
            } catch (error) {
                console.error('검색 결과 가져오기 실패:', error);
            }
            
            let resultHTML = `
                <div style="padding: 20px; background: var(--bg-primary); border-radius: 8px; margin-top: 15px;">
                    <h3 style="margin-bottom: 15px; color: var(--text-primary);">🔍 검색 내용</h3>
                    <div style="padding: 10px; background: var(--bg-secondary); border-radius: 6px; margin-bottom: 15px;">
                        ${query}
                    </div>
            `;
            
            // AI 답변 표시
            if (aiAnswer) {
                resultHTML += `
                    <div style="margin-top: 15px;">
                        <h3 style="margin-bottom: 10px; color: var(--primary-color); font-size: 16px;">🤖 AI 답변</h3>
                        <div style="padding: 15px; background: linear-gradient(135deg, #f8f9ff 0%, #e8ecfd 100%); border-radius: 6px; border-left: 4px solid var(--primary-color);">
                            <pre style="white-space: pre-wrap; word-wrap: break-word; font-family: inherit; margin: 0; font-size: 14px;">${aiAnswer}</pre>
                        </div>
                    </div>
                `;
            }
            
            // 검색 결과 내용 표시 (AI 답변이 없는 경우만)
            if (searchResult && !aiAnswer) {
                resultHTML += `
                    <div style="margin-top: 15px;">
                        <h3 style="margin-bottom: 10px; color: var(--text-primary);">📋 검색 결과</h3>
                        <div style="padding: 15px; background: var(--bg-secondary); border-radius: 6px; border-left: 3px solid var(--primary-color);">
                            <pre style="white-space: pre-wrap; word-wrap: break-word; font-family: inherit; margin: 0;">${searchResult}</pre>
                        </div>
                    </div>
                `;
            }
            
            if (barChartPath) {
                resultHTML += `
                    <div style="margin-top: 15px;">
                        <h4 style="font-size: 14px; margin-bottom: 10px;">📊 검색 결과 관련성</h4>
                        <iframe src="${barChartPath}" style="width: 100%; height: 400px; border: 2px solid var(--border-color); border-radius: 6px;"></iframe>
                    </div>
                `;
            }
            
            if (htmlFilePath) {
                resultHTML += `
                    <div style="margin-top: 15px;">
                        <h4 style="font-size: 14px; margin-bottom: 10px;">🔍 3D 공간 시각화</h4>
                        <iframe src="${htmlFilePath}" style="width: 100%; height: 700px; border: 2px solid var(--border-color); border-radius: 6px;"></iframe>
                    </div>
                `;
            }
            
            resultHTML += `</div>`;
            
            aiSearchResults.innerHTML = resultHTML;
            
            // 결과 섹션으로 스크롤
            aiSearchResults.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }

        // 페이지 로드 시 파일 목록 및 검색 기록 표시
        loadAllFiles();
        loadSearchHistory();
    </script>
</body>
</html>

